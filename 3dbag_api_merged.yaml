---
openapi: 3.0.3
info:
  title: '3D BAG plus API'
  description: |-
  
    The [3D BAG](https://3dbag.nl) is an up-to-date data set containing 3D building models of the Netherlands. 
    The 3D BAG is open data. It contains 3D models at multiple levels of detail, 
    which are generated by combining two open data sets: 
    the building data from the BAG and the height data from the AHN. 
    The 3D BAG is updated regularly, keeping it up-to-date with the latest openly 
    available building stock and elevation information.
    
    3D BAG plus is an extended version of the 3D BAG data set.
    It contains additional information that is either derived from the 3D BAG,
    or integrated from other data sources.
    The 3D BAG plus is created and maintained by 3DGI.
    
    Copyright (c) 2022 3DGI.
  version: 0.1.0
  contact:
    name: "3DGI"
    email: info@3dbag.nl
    url: https://docs.3dbag.nl/en/contact/ #TODO
  license:
    name: 3DGI License
    url: https://3dgi.nl/legal #TODO
  x-logo:
    url: https://3dgi.nl/img/Logo-02.png
servers:
  - url: http://3dbag-api.test
    description: 3D BAG plus production server
tags:
  - name: Capabilities
    description: |-
      essential characteristics of this API
  - name: Data
    description: |-
      access to data (features)

paths:
  '/':
    get:
      tags:
        - Capabilities
      summary: landing page
      description: |-
        The landing page provides links to the API definition, the conformance
        statements and to the feature collections in this dataset.
      operationId: getLandingPage
      responses:
        '200':
          $ref: '#/components/responses/LandingPage'
        '500':
          $ref: '#/components/responses/ServerError'
  '/conformance':
    get:
      tags:
        - Capabilities
      summary: information about specifications that this API conforms to
      description: |-
        A list of all conformance classes specified in a standard that the
        server conforms to.
      operationId: getConformanceDeclaration
      responses:
        '200':
          $ref: '#/components/responses/ConformanceDeclaration'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections':
    get:
      tags:
        - Capabilities
      summary: the feature collections in the data set
      operationId: getCollections
      responses:
        '200':
          $ref: '#/components/responses/Collections'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/pand':
    get:
      tags:
        - Capabilities
      summary: 3D building models based on the 'pand' layer of the BAG data set
      operationId: describeCollection
      responses:
        '200':
          $ref: '#/components/responses/Collection'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/pand/items':
    get:
      tags:
        - Data
      summary: fetch pand features
      description: |-
        Fetch features of the feature collection with id `pand`.
      operationId: getFeatures
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/bbox-crs'
      responses:
        '200':
          $ref: '#/components/responses/Features'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/pand/items/{featureId}':
    get:
      tags:
        - Data
      summary: fetch a single 3D BAG feature
      description: |-
        Fetches a 3D BAG object/feature in CityJSONFeatures format.
        The feature includes all Levels of Detail.
        Filtering on LoD is just proposed, not implemented yet.
      parameters:
        - $ref: '#/components/parameters/featureId'
        - name: LoD
          in: query
          required: false
          description: Level of Detail
          schema:
            type: string
            enum:
              - '1.2'
              - '1.3'
              - '2.2'
      responses:
        '200':
          $ref: '#/components/responses/Feature'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/pand/items/{featureId}/addresses':
    get:
      tags:
        - Data
      summary: fetch the addresses of `featureId`
      description: |-
        Fetch the addresses that are located within the building `featureId`.
      operationId: getFeatureAddresses
      parameters:
        - $ref: '#/components/parameters/featureId'
      responses:
        '200':
          $ref: '#/components/responses/FeatureAddresses'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  '/collections/pand/items/{featureId}/surfaces':
    get:
      tags:
        - Data
      summary: fetch a single feature
      description: |-
        Fetch information about the surfaces of `featureId`.
      operationId: getFeatureSurfaces
      parameters:
        - $ref: '#/components/parameters/featureId'
      responses:
        '200':
          $ref: '#/components/responses/FeatureSurfaces'
        '400':
          $ref: '#/components/responses/InvalidParameter'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  parameters: 
    bbox:
      name: bbox
      in: query
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four numbers:

        * Lower left corner, coordinate axis 1 (min. x)
        * Lower left corner, coordinate axis 2 (min. y)
        * Upper right corner, coordinate axis 1 (max. x)
        * Upper right corner, coordinate axis 2 (max. y)

        The default coordinate reference system is Amersfoort / RD New, EPSG:28992
        (https://www.opengis.net/def/crs/EPSG/0/28992).
        Currently only `https://www.opengis.net/def/crs/EPSG/0/28992` is supported as `bbox-crs`.
      required: false
      schema:
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: number
      style: form
      explode: false
    bbox-crs:
      name: bbox-crs
      description: |-
        Asserts the CRS used for the coordinate values of the bbox parameter. 
        The default is Amersfoort / RD New, EPSG:28992
        (https://www.opengis.net/def/crs/EPSG/0/28992) for a value with 4 numbers.
        Currently only `https://www.opengis.net/def/crs/EPSG/0/28992` is supported as `bbox-crs`.
      in: query
      required: false
      schema:
        type: string
        format: uri
      style: form
      explode: false
    featureId:
      name: featureId
      in: path
      description: 3D BAG [`identificatie`](https://docs.3dbag.nl/en/schema/attributes/#identificatie)
      example: NL.IMBAG.Pand.0851100000000564-0
      required: true
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: |-
        The optional limit parameter limits the number of items that are presented in the response document.

        Only items are counted that are on the first level of the collection in the response document.
        Nested objects contained within the explicitly requested items shall not be counted.

        Minimum = 1. Maximum = 10000. Default = 10.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10
      style: form
      explode: false
  schemas: 
    collection:
      type: object
      required:
        - id
        - links
      properties:
        id:
          description: identifier of the collection used, for example, in URIs
          type: string
          example: address
        title:
          description: human readable title of the collection
          type: string
          example: address
        description:
          description: a description of the features in the collection
          type: string
          example: An address.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
          example:
            - href: http://data.example.com/buildings
              rel: item
            - href: http://example.com/concepts/buildings.html
              rel: describedby
              type: text/html
        extent:
          $ref: '#/components/schemas/extent'
        itemType:
          description: indicator about the type of the items in the collection (the default value is 'feature').
          type: string
          default: feature
        crs:
          description: the list of coordinate reference systems supported by the service
          type: array
          items:
            type: string
          default:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          example:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
            - http://www.opengis.net/def/crs/EPSG/0/4326
    collections:
      type: object
      required:
        - links
        - collections
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collection'
    confClasses:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
            example: "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core"
    extent:
      description: |-
        The extent of the features in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.
  
        An array of extents is provided for each extent type (spatial, temporal). The first item
        in the array describes the overall extent of the data. All subsequent items describe more
        precise extents, e.g., to identify clusters of data. Clients only interested in the
        overall extent will only need to access the first extent in the array.
      type: object
      properties:
        spatial:
          description: |-
            The spatial extent of the features in the collection.
          type: object
          properties:
            bbox:
              description: |-
                One or more bounding boxes that describe the spatial extent of the dataset.
                In the Core only a single bounding box is supported.
  
                Extensions may support additional areas.
                The first bounding box describes the overall spatial
                extent of the data. All subsequent bounding boxes describe
                more precise bounding boxes, e.g., to identify clusters of data.
                Clients only interested in the overall spatial extent will
                only need to access the first bounding box in the array.
              type: array
              minItems: 1
              items:
                description: |-
                  Each bounding box is provided as four or six numbers, depending on
                  whether the coordinate reference system includes a vertical axis
                  (height or depth):
  
                  * Lower left corner, coordinate axis 1
                  * Lower left corner, coordinate axis 2
                  * Minimum value, coordinate axis 3 (optional)
                  * Upper right corner, coordinate axis 1
                  * Upper right corner, coordinate axis 2
                  * Maximum value, coordinate axis 3 (optional)
  
                  If the value consists of four numbers, the coordinate reference system is
                  WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84)
                  unless a different coordinate reference system is specified in `crs`.
  
                  If the value consists of six numbers, the coordinate reference system is WGS 84
                  longitude/latitude/ellipsoidal height (http://www.opengis.net/def/crs/OGC/0/CRS84h)
                  unless a different coordinate reference system is specified in `crs`.
  
                  For WGS 84 longitude/latitude the values are in most cases the sequence of
                  minimum longitude, minimum latitude, maximum longitude and maximum latitude.
                  However, in cases where the box spans the antimeridian the first value
                  (west-most box edge) is larger than the third value (east-most box edge).
  
                  If the vertical axis is included, the third and the sixth number are
                  the bottom and the top of the 3-dimensional bounding box.
  
                  If a feature has multiple spatial geometry properties, it is the decision of the
                  server whether only a single spatial geometry property is used to determine
                  the extent or all relevant geometries.
                type: array
                minItems: 4
                maxItems: 6
                items:
                  type: number
                example:
                  - -180
                  - -90
                  - 180
                  - 90
            crs:
              description: |-
                Coordinate reference system of the coordinates in the spatial extent
                (property `bbox`). The default reference system is WGS 84 longitude/latitude.
                In the Core the only other supported coordinate reference system is
                WGS 84 longitude/latitude/ellipsoidal height for coordinates with height.
                Extensions may support additional coordinate reference systems and add
                additional enum values.
              type: string
              enum:
                - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
                - 'http://www.opengis.net/def/crs/OGC/0/CRS84h'
              default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
    exception:
      type: object
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
    featureCityJSON:
      type: object
      properties:
        cityjsonfeature:
          $ref: https://3d.bk.tudelft.nl/schemas/cityjson/1.1.1/cityjsonfeature.schema.json
        id:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    featureCollection:
      type: object
      required:
        - type
        - features
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureCityJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          type: string
          format: date-time
        numberMatched:
          type: integer
          minimum: 0
        numberReturned:
          type: integer
          minimum: 0
    featureJSONAddress:
      type: object
      required:
        - type
        - properties
      properties:
        gebruiksdoel:
          type: array
          items:
            type: string
        gebruiksvloeroppervlakte:
          type: number
        postcode:
          type: string
        huisnummer:
          type: integer
          format: int32
        huisletter:
          type: string
        huisnummertoevoeging:
          type: string
        opr_naam:
          type: string
        opr_type:
          type: string
        wpl_naam:
          type: string
        na_postcode:
          type: string
        na_huisnummer:
          type: integer
          format: int32
        na_huisletter:
          type: string
        na_huisnummertoevoeging:
          type: string
        na_opr_naam:
          type: string
        tile:
          type: string
        id: 
          type: string
        id_pand: 
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    featureJSONAddressCollection:
      type: object
      required:
        - links
        - addresses
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/featureJSONAddress'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    featureJSONSurfaces:
      type: object
      required:
        - type
        - properties
      properties:
        area_ground:
          type: number
          description: 'Area of the ground surface of the building model. Unit: m2'
        area_roof_flat:
          type: number
        area_roof_sloped:
          type: number
        area_shared_wall:
          type: number
        area_exterior_wall:
          type: number
        identificatie:
          $ref: '#/components/parameters/featureId'
        oorspronkelijkbouwjaar:
          type: string
        pw_actueel:
          type: boolean
        status:
          type: string
        oppervlakte_bag_geometrie:
          type: number
        tile:
          type: string
        id:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    landingPage:
      type: object
      required:
        - links
      properties:
        title:
          type: string
          example: Buildings in Bonn
        description:
          type: string
          example: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    link:
      type: object
      required:
        - href
        - rel
      properties:
        href:
          type: string
          example: https://data.3dbag.nl/api/3dbagplus/collections/pand/items/0851100000000564/0851100000000564-0
        rel:
          type: string
          example: alternate
        type:
          type: string
          example: application/city+json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: Spui 70, 2511 BT Den Haag
        length:
          type: integer
  responses:
    LandingPage:
      description: |-
        The landing page provides links to the API definition 
        (link relations `service-desc` and `service-doc`), 
        the Conformance declaration (path `/conformance`, 
        link relation `conformance`), and the Feature 
        Collections (path `/collections`, link relation 
        `data`).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
          example:
            title: 3D BAG plus
            description: TODO data set description.
            links:
              - href: https://data.3dbag.nl/api/3dbagplus
                rel: self
                type: application/json
                title: this document
              - href: https://data.3dbag.nl/api/3dbagplus/api
                rel: service-desc
                type: application/vnd.oai.openapi+json;version=3.0
                title: the API definition
              - href: https://data.3dbag.nl/api/3dbagplus/api.html
                rel: service-doc
                type: text/html
                title: the API documentation
              - href: https://data.3dbag.nl/api/3dbagplus/conformance
                rel: conformance
                type: application/json
                title: OGC API conformance classes implemented by this server
              - href: https://data.3dbag.nl/api/3dbagplus/collections
                rel: data
                type: application/json
                title: Information about the feature collections
    ServerError:
      description: |-
        A server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    NotFound:
      description: |-
        The requested URI was not found.
    InvalidParameter:
      description: |-
        A query parameter has an invalid value.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    ConformanceDeclaration:
      description: |-
        The URIs of all conformance classes supported by the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/confClasses'
          example:
            conformsTo:
              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'
              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'
              - 'https://www.cityjson.org/specs/1.1.1'
    Collections:
      description: |-
        The feature collections shared by this API.
  
        The dataset is organized as one or more feature collections. This resource
        provides information about and access to the collections.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collections'
          example:
            links:
              - href: https://data.3dbag.nl/api/3dbagplus/collections.json
                rel: self
                type: application/json
                title: this document
              # TODO: according to the specs, providing 'alternate' links is required (eg. text/html). But I don't want to support html from the beginning, because it is more work. But I'm not sure if the schema is still valid like this.
              - href: https://data.3dbag.nl/postgres/3dbag_v210908_fd2cee53.zip #TODO: bulk download link
                rel: enclosure
                type: application/...
                title: Bulk download (PostgreSQL dump)
                length: ...
            collections:
              - id: pand
                title: 3D pand # TODO: give title
                description: the 3d bag pand layer # TODO: describe
                extent:
                  spatial:
                    bbox:
                      - - 10000
                        - 306250
                        - 287760
                        - 623690
                    crs: https://www.opengis.net/def/crs/EPSG/0/7415
                  temporal:
                    interval:
                      - null
                      - '2019-12-31T24:59:59Z' # TODO: '2019' is the max bouwjaar in the BAG. I just added the rest, because a timestamp is required. Not sure if we should reference the BAG dates or the AHN dates.
                itemType: feature
                crs:
                  - https://www.opengis.net/def/crs/EPSG/0/7415
                links:
                  - href: https://data.3dbag.nl/api/3dbagplus/collections/pand
                    rel: items
                    type: application/city+json
                    title: Pand
                  # TODO: add license
                  - href: https://creativecommons.org/licenses/by/4.0/
                    rel: license
                    type: text/html
                    title: CC BY 4.0
                  - href: https://creativecommons.org/licenses/by/4.0/rdf
                    rel: license
                    type: application/rdf+xml
                    title: CC BY 4.0
              - id: boom
                title: Trees
                description: Just some placeholder example to show how we could extend the API if new feature collections come in the future.
                links:
                  - href: https://data.3dbag.nl/api/3dbagplus/collections/boom
                    rel: items
                    type: application/city+json
                    title: Boom
    Collection:
      description: |-
        Information about the feature collection with id `collectionId`.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collection'
          example:
            id: pand
            title: 3D pand # TODO: give title
            description: the 3d bag pand layer # TODO: describe
            extent:
              spatial:
                bbox:
                  - - 10000
                    - 306250
                    - 287760
                    - 623690
                crs: https://www.opengis.net/def/crs/EPSG/0/7415
              temporal:
                interval:
                  - null
                  - '2019-12-31T24:59:59Z' # TODO: '2019' is the max bouwjaar in the BAG. I just added the rest, because a timestamp is required. Not sure if we should reference the BAG dates or the AHN dates.
            itemType: feature
            crs:
              - https://www.opengis.net/def/crs/EPSG/0/7415
            links:
              - href: https://data.3dbag.nl/api/3dbagplus/collections/pand
                rel: items
                type: application/city+json
                title: Pand
              # TODO: add license
              - href: https://creativecommons.org/licenses/by/4.0/
                rel: license
                type: text/html
                title: CC BY 4.0
              - href: https://creativecommons.org/licenses/by/4.0/rdf
                rel: license
                type: application/rdf+xml
                title: CC BY 4.0
    Features:
      description: |-
        The response is a document consisting of features in the collection.
        The features included in the response are determined by the server
        based on the query parameters of the request. To support access to
        larger collections without overloading the client, the API supports
        paged access with links to the next page, if more features are selected
        that the page size.
        
        The `bbox` parameter can be used to select only a
        subset of the features in the collection (the features that are in the
        bounding box). The `bbox` parameter matches all features
        in the collection that are not associated with a location, too.

        The `limit` parameter may be used to control the subset of the
        selected features that should be returned in the response, the page size.
        Each page includes information about the number of selected and
        returned features (`numberMatched` and `numberReturned`) as well as
        links to support paging (link relation `next`).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/featureCollection'
    Feature:
      description: |-
        Fetch a single feature with id `featureId` in *CityJSONFeature* format.
        
        Feature hierarchy is represented by by the link relations `child` and `parent`.
      content:
        application/city+json:
          schema:
            $ref: '#/components/schemas/featureCityJSON'
    FeatureSurfaces:
      description: |-
        Fetch information about the surfaces of the feature with id `featureId`.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/featureJSONSurfaces'
    FeatureAddresses:
      description: |-
        Fetch the addresses related to the feature with id `featureId`.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/featureJSONAddressCollection'